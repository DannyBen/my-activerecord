require './lib/boot'

title   "My ActiveRecord Baseline"
summary "A baseline repository for ActiveRecord apps"
version "0.1.0"

help    "Run the interactive console"
example "c"
action :console, :c do
  run 'bin/console'
end

usage   "ap COMMAND..."
help    "Awesome-Print something in context"
example "ap User.first"
action :ap do |args|
  run %Q[ruby -r./lib/boot.rb -e "ap #{args['COMMAND'].join ' '}"]
end

usage   "(runner|r) COMMAND..."
help    "Run something in context"
example "r \"User.create name:'bob'\""
action :runner, :r do |args|
  run %Q[ruby -r./lib/boot.rb -e "#{args['COMMAND'].join ' '}"]
end

usage   "(generate|g) NAME"
help    "Generate a new migration file"
example "g add_last_name_to_user"
action :generate, :g do |args|
  name = args['NAME']
  timestamp = Time.now.strftime "%Y%m%d%H%M%S"
  path = "db/migrate/#{timestamp}_#{name}.rb"
  migration_class = name.split("_").map(&:capitalize).join
  migration = "class #{migration_class} < ActiveRecord::Migration[6.1]\n  def change\n  end\nend"

  File.write path, migration
  say "Migration #{path} created"
end


command "db"

help    "Run database migrations"
action :migrate do
  env_migration_version = ENV["VERSION"] ? ENV["VERSION"].to_i : nil
  ActiveRecord::MigrationContext.new("db/migrate", ActiveRecord::SchemaMigration).migrate(env_migration_version)

  say "Database migrated"
end

help   "Generate a schema file that can be used as a base migration"
action :schema do
  require 'active_record/schema_dumper'
  filename = "db/schema.rb"
  File.open(filename, "w:utf-8") do |file|
    ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, file)
  end
  say "db/schema.rb generated"
end

command "log"

help   "Clean log/*.log"
action :clean do
  # Need to run this outside of ruby, otherwise log files are busy
  run! "rm log/*.log"
end

endcommand
